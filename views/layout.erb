<!DOCTYPE html>
<html>
<head>
    <title>House Listings</title>
    <link rel="stylesheet" href="/css/styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <nav class="bg-white shadow-lg p-4">
        <div class="container mx-auto">
            <h1 class="text-2xl font-bold text-gray-800">House Listings</h1>
            <div class="mt-4 flex gap-4 items-center">
                <label class="text-gray-700">Filter by source:</label>
                <form id="sourceFilter" class="flex gap-2">
                    <label class="inline-flex items-center mr-4">
                        <input type="checkbox" 
                               id="selectAll"
                               class="form-checkbox h-5 w-5 text-blue-600">
                        <span class="ml-2 text-gray-700">Select All</span>
                    </label>
                    
                    <% @available_sources.each do |source| %>
                        <label class="inline-flex items-center">
                            <input type="checkbox" 
                                   name="sources[]" 
                                   value="<%= source %>" 
                                   <%= @selected_sources&.include?(source) ? 'checked' : '' %>
                                   class="source-checkbox form-checkbox h-5 w-5 text-blue-600">
                            <span class="ml-2 text-gray-700"><%= source.capitalize %></span>
                        </label>
                    <% end %>
                    <button type="submit" 
                            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                        Apply Filter
                    </button>
                </form>
            </div>
        </div>
    </nav>
    
    <main class="container mx-auto p-4">
        <%= yield %>
    </main>

    <script>
    document.getElementById('sourceFilter').addEventListener('submit', function(e) {
        e.preventDefault();
        const selectedSources = Array.from(this.querySelectorAll('input[name="sources[]"]:checked'))
            .map(cb => cb.value);
        
        const url = new URL(window.location);
        url.searchParams.delete('sources');
        selectedSources.forEach(source => {
            url.searchParams.append('sources', source);
        });
        
        window.location = url;
    });

    document.addEventListener('DOMContentLoaded', function() {
        const selectAllCheckbox = document.getElementById('selectAll');
        const sourceCheckboxes = document.querySelectorAll('.source-checkbox');
        
        // Update "Select All" checkbox state based on other checkboxes
        function updateSelectAllCheckbox() {
            const allChecked = Array.from(sourceCheckboxes).every(checkbox => checkbox.checked);
            selectAllCheckbox.checked = allChecked;
            selectAllCheckbox.indeterminate = !allChecked && 
                Array.from(sourceCheckboxes).some(checkbox => checkbox.checked);
        }

        // Initialize the select all checkbox state
        updateSelectAllCheckbox();

        // Handle "Select All" checkbox changes
        selectAllCheckbox.addEventListener('change', function() {
            const isChecked = this.checked;
            sourceCheckboxes.forEach(checkbox => {
                checkbox.checked = isChecked;
            });
        });

        // Handle individual checkbox changes
        sourceCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectAllCheckbox);
        });
    });
    </script>
</body>
</html> 